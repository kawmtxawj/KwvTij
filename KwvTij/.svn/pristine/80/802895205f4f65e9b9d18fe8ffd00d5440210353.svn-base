package ui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Label;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.ListIterator;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EtchedBorder;

import control.Control_UI;

import model.TibNeeg;


public class KaoFrame{
	
	private Control_UI cltr_ui ;
	private UIMenu menu;
	private UITool tools;
	
	private JFrame window;
	private JPanel panel;
	private JComboBox<TibNeeg> combo;
	private JTextField fiel_npe;
	private JTextField fiel_xeem; 
	private JButton button_add;
	private JButton button_showHier;
	
	private UIPanelDrawFailyTree zoneDraw;
	private JPanel panelDraw;
	
	
	ButtonListener listener;
	
	public KaoFrame(String title, Control_UI con_ui) {
		this.cltr_ui = con_ui;
		this.window = new JFrame(title);
		this.window.setSize(1200, 800);
		this.window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		this.menu = new UIMenu(cltr_ui);
		this.window.setJMenuBar(this.menu);
		
		
		// Le Layout
		//GridBagLayout g = new GridBagLayout();
		//window.setLayout(g);
		
		this.tools = new UITool(this.cltr_ui);
		this.window.add(this.tools, BorderLayout.NORTH);
		
		panel = new JPanel();
		combo = new JComboBox<>();
		addAllTibNeegToCombo();
		
		panel.add(combo);
		
		fiel_npe = new JTextField(15);
		panel.add(fiel_npe);
		fiel_xeem = new JTextField(15);
		panel.add(fiel_xeem);
		
		listener = new ButtonListener();
		button_add = new JButton("Add Tib Neeg");
		button_add.addActionListener(listener);
		panel.add(button_add);
		
		button_showHier = new JButton("Show Hierarchy");
		button_showHier.addActionListener(listener);
		panel.add(button_showHier);
		/*
		Dimension d = new Dimension(800, 400);
		Point begin = new Point(50,d.height/2);
		Point end = new Point(d.width-50,d.height/2);
		
		this.zoneDraw = new UIPanelDrawFailyTree(d, begin, end);
		*/
		this.zoneDraw = new UIPanelDrawFailyTree(this.cltr_ui.getYawmSaub(), this.cltr_ui.getYawmSaub().getYawgKoobTop());
		
		panelDraw = new JPanel(new BorderLayout());
		panelDraw.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED));
		panelDraw.setBorder(BorderFactory.createTitledBorder(" Famaly Tree "));		// Border 
		panelDraw.add(this.zoneDraw, BorderLayout.CENTER);
		
		panel.add(panelDraw);
		
		
		window.add(panel);
	} 
	
	/**
	 * Add all item (TibNeeg) present in the comboBox
	 */
	protected void addAllTibNeegToCombo(){
		ArrayList<TibNeeg> list_tn = new ArrayList<>();
		list_tn = this.cltr_ui.getThsobTree();
		
		// Sort
		Collections.sort(list_tn, new Comparator<TibNeeg>() {
	        @Override public int compare(TibNeeg p1, TibNeeg p2) {
	            return p1.compareTibNeeg(p2);
	        }
	    });
		
		ListIterator<TibNeeg> litr = list_tn.listIterator();		
		while(litr.hasNext()) {
			addItemToComboBox((TibNeeg) litr.next());
	      }
		repaintComboBox();
	}
	
	/**
	 * Add an Item (TiBNeeg) to combo box
	 * @param tn - Item to add
	 */
	protected void addItemToComboBox(TibNeeg tn){
		this.combo.addItem(tn);
	}
	
	/**
	 * Update ComboBox when open a new file (action refresh combobox)
	 */
	public void updateComboBox() {
		clearCombo();
		addAllTibNeegToCombo();
	}
	
	private void clearCombo() {
		this.combo.removeAllItems();
	}

	
	public void repaintComboBox() {
		this.combo.repaint();
	}
	
	/**
	 * Show the main window
	 */
	public void show(){
		this.window.setVisible(true);
	}
	
	/**
	 * Hide the main window
	 */
	public void hide(){
		this.window.setVisible(false);
	}
	
	public JFrame getWindow() {
		return this.window;
	}
	
	
	/* ++++++++ Listeners++++++++ */
	private class ButtonListener implements ActionListener {
		  public void actionPerformed (ActionEvent event) {
		    Object source = event.getSource();

		    if (source == button_add) {
		        //System.out.println("Add \"Tib Neeg\" button clik!");
		        TibNeeg tn = (TibNeeg) combo.getSelectedItem();
		        String npe = fiel_npe.getText();
		        String xeem = fiel_xeem.getText();
		        npe = npe.trim();									// leading and trailing white space removed 
		        xeem = xeem.trim();									// leading and trailing white space removed
		        
		        int no_err = cltr_ui.creatTibNeeg(tn, npe, xeem);
		        if(no_err == 1){
		        	System.out.println("Create Tib neeg sucess!");
		        	updateComboBox();								// Update item in combobox
		        }
		        if(no_err == 0){
		        	System.out.println("Tus tib neeg no twb muaj lawm!");	
		        }
		        if(no_err == -1){
		        	System.out.println("Rau lub npe-xeem kom txhij.");	
		        }
		        
		    }
		    
		    if (source == button_showHier) {
		        
		        //cltr_ui.showHierarchy();
		        
		    	/*
		    	Dimension d = new Dimension(800, 500);
				Point begin = new Point(50,d.height/2);
				Point end = new Point(d.width-50,d.height/2);
				
		    	UIPanelDrawFailyTree newDraw =  new UIPanelDrawFailyTree(d, begin, end);
		    	panelDraw.remove(zoneDraw);
		    	panelDraw.revalidate();
		    	panelDraw.add(newDraw);
		    	
		    	panelDraw.repaint();
		    	*/
		    }
		    
		    if (source == button_showHier) {
		        
		        System.out.println("pan image clic!");
		    }
 
		  }
	 }
	
}
